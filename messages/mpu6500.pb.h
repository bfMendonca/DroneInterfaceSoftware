// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mpu6500.proto

#ifndef PROTOBUF_mpu6500_2eproto__INCLUDED
#define PROTOBUF_mpu6500_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "vector3.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_mpu6500_2eproto();
void protobuf_AssignDesc_mpu6500_2eproto();
void protobuf_ShutdownFile_mpu6500_2eproto();

class MPU6500Readings;

// ===================================================================

class MPU6500Readings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:MPU6500Readings) */ {
 public:
  MPU6500Readings();
  virtual ~MPU6500Readings();

  MPU6500Readings(const MPU6500Readings& from);

  inline MPU6500Readings& operator=(const MPU6500Readings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MPU6500Readings& default_instance();

  void Swap(MPU6500Readings* other);

  // implements Message ----------------------------------------------

  inline MPU6500Readings* New() const { return New(NULL); }

  MPU6500Readings* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MPU6500Readings& from);
  void MergeFrom(const MPU6500Readings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MPU6500Readings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Vector3 accelerometer = 1;
  bool has_accelerometer() const;
  void clear_accelerometer();
  static const int kAccelerometerFieldNumber = 1;
  const ::Vector3& accelerometer() const;
  ::Vector3* mutable_accelerometer();
  ::Vector3* release_accelerometer();
  void set_allocated_accelerometer(::Vector3* accelerometer);

  // required .Vector3 gyroscope = 2;
  bool has_gyroscope() const;
  void clear_gyroscope();
  static const int kGyroscopeFieldNumber = 2;
  const ::Vector3& gyroscope() const;
  ::Vector3* mutable_gyroscope();
  ::Vector3* release_gyroscope();
  void set_allocated_gyroscope(::Vector3* gyroscope);

  // required float temperature = 3;
  bool has_temperature() const;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 3;
  float temperature() const;
  void set_temperature(float value);

  // required uint64 timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:MPU6500Readings)
 private:
  inline void set_has_accelerometer();
  inline void clear_has_accelerometer();
  inline void set_has_gyroscope();
  inline void clear_has_gyroscope();
  inline void set_has_temperature();
  inline void clear_has_temperature();
  inline void set_has_timestamp();
  inline void clear_has_timestamp();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Vector3* accelerometer_;
  ::Vector3* gyroscope_;
  ::google::protobuf::uint64 timestamp_;
  float temperature_;
  friend void  protobuf_AddDesc_mpu6500_2eproto();
  friend void protobuf_AssignDesc_mpu6500_2eproto();
  friend void protobuf_ShutdownFile_mpu6500_2eproto();

  void InitAsDefaultInstance();
  static MPU6500Readings* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MPU6500Readings

// required .Vector3 accelerometer = 1;
inline bool MPU6500Readings::has_accelerometer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MPU6500Readings::set_has_accelerometer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MPU6500Readings::clear_has_accelerometer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MPU6500Readings::clear_accelerometer() {
  if (accelerometer_ != NULL) accelerometer_->::Vector3::Clear();
  clear_has_accelerometer();
}
inline const ::Vector3& MPU6500Readings::accelerometer() const {
  // @@protoc_insertion_point(field_get:MPU6500Readings.accelerometer)
  return accelerometer_ != NULL ? *accelerometer_ : *default_instance_->accelerometer_;
}
inline ::Vector3* MPU6500Readings::mutable_accelerometer() {
  set_has_accelerometer();
  if (accelerometer_ == NULL) {
    accelerometer_ = new ::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:MPU6500Readings.accelerometer)
  return accelerometer_;
}
inline ::Vector3* MPU6500Readings::release_accelerometer() {
  // @@protoc_insertion_point(field_release:MPU6500Readings.accelerometer)
  clear_has_accelerometer();
  ::Vector3* temp = accelerometer_;
  accelerometer_ = NULL;
  return temp;
}
inline void MPU6500Readings::set_allocated_accelerometer(::Vector3* accelerometer) {
  delete accelerometer_;
  accelerometer_ = accelerometer;
  if (accelerometer) {
    set_has_accelerometer();
  } else {
    clear_has_accelerometer();
  }
  // @@protoc_insertion_point(field_set_allocated:MPU6500Readings.accelerometer)
}

// required .Vector3 gyroscope = 2;
inline bool MPU6500Readings::has_gyroscope() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MPU6500Readings::set_has_gyroscope() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MPU6500Readings::clear_has_gyroscope() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MPU6500Readings::clear_gyroscope() {
  if (gyroscope_ != NULL) gyroscope_->::Vector3::Clear();
  clear_has_gyroscope();
}
inline const ::Vector3& MPU6500Readings::gyroscope() const {
  // @@protoc_insertion_point(field_get:MPU6500Readings.gyroscope)
  return gyroscope_ != NULL ? *gyroscope_ : *default_instance_->gyroscope_;
}
inline ::Vector3* MPU6500Readings::mutable_gyroscope() {
  set_has_gyroscope();
  if (gyroscope_ == NULL) {
    gyroscope_ = new ::Vector3;
  }
  // @@protoc_insertion_point(field_mutable:MPU6500Readings.gyroscope)
  return gyroscope_;
}
inline ::Vector3* MPU6500Readings::release_gyroscope() {
  // @@protoc_insertion_point(field_release:MPU6500Readings.gyroscope)
  clear_has_gyroscope();
  ::Vector3* temp = gyroscope_;
  gyroscope_ = NULL;
  return temp;
}
inline void MPU6500Readings::set_allocated_gyroscope(::Vector3* gyroscope) {
  delete gyroscope_;
  gyroscope_ = gyroscope;
  if (gyroscope) {
    set_has_gyroscope();
  } else {
    clear_has_gyroscope();
  }
  // @@protoc_insertion_point(field_set_allocated:MPU6500Readings.gyroscope)
}

// required float temperature = 3;
inline bool MPU6500Readings::has_temperature() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MPU6500Readings::set_has_temperature() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MPU6500Readings::clear_has_temperature() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MPU6500Readings::clear_temperature() {
  temperature_ = 0;
  clear_has_temperature();
}
inline float MPU6500Readings::temperature() const {
  // @@protoc_insertion_point(field_get:MPU6500Readings.temperature)
  return temperature_;
}
inline void MPU6500Readings::set_temperature(float value) {
  set_has_temperature();
  temperature_ = value;
  // @@protoc_insertion_point(field_set:MPU6500Readings.temperature)
}

// required uint64 timestamp = 4;
inline bool MPU6500Readings::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MPU6500Readings::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MPU6500Readings::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MPU6500Readings::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 MPU6500Readings::timestamp() const {
  // @@protoc_insertion_point(field_get:MPU6500Readings.timestamp)
  return timestamp_;
}
inline void MPU6500Readings::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:MPU6500Readings.timestamp)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mpu6500_2eproto__INCLUDED
