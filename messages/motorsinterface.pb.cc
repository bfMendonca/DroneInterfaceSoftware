// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: motorsinterface.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "motorsinterface.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MotorsInterfaceMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MotorsInterfaceMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_motorsinterface_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_motorsinterface_2eproto() {
  protobuf_AddDesc_motorsinterface_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "motorsinterface.proto");
  GOOGLE_CHECK(file != NULL);
  MotorsInterfaceMessage_descriptor_ = file->message_type(0);
  static const int MotorsInterfaceMessage_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorsInterfaceMessage, motor1dc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorsInterfaceMessage, motor2dc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorsInterfaceMessage, motor3dc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorsInterfaceMessage, motor4dc_),
  };
  MotorsInterfaceMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MotorsInterfaceMessage_descriptor_,
      MotorsInterfaceMessage::default_instance_,
      MotorsInterfaceMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorsInterfaceMessage, _has_bits_[0]),
      -1,
      -1,
      sizeof(MotorsInterfaceMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MotorsInterfaceMessage, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_motorsinterface_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MotorsInterfaceMessage_descriptor_, &MotorsInterfaceMessage::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_motorsinterface_2eproto() {
  delete MotorsInterfaceMessage::default_instance_;
  delete MotorsInterfaceMessage_reflection_;
}

void protobuf_AddDesc_motorsinterface_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_motorsinterface_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025motorsinterface.proto\"`\n\026MotorsInterfa"
    "ceMessage\022\020\n\010motor1DC\030\001 \002(\002\022\020\n\010motor2Dc\030"
    "\002 \002(\002\022\020\n\010motor3DC\030\003 \002(\002\022\020\n\010motor4DC\030\004 \002("
    "\002", 121);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "motorsinterface.proto", &protobuf_RegisterTypes);
  MotorsInterfaceMessage::default_instance_ = new MotorsInterfaceMessage();
  MotorsInterfaceMessage::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_motorsinterface_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_motorsinterface_2eproto {
  StaticDescriptorInitializer_motorsinterface_2eproto() {
    protobuf_AddDesc_motorsinterface_2eproto();
  }
} static_descriptor_initializer_motorsinterface_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MotorsInterfaceMessage::kMotor1DCFieldNumber;
const int MotorsInterfaceMessage::kMotor2DcFieldNumber;
const int MotorsInterfaceMessage::kMotor3DCFieldNumber;
const int MotorsInterfaceMessage::kMotor4DCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MotorsInterfaceMessage::MotorsInterfaceMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MotorsInterfaceMessage)
}

void MotorsInterfaceMessage::InitAsDefaultInstance() {
}

MotorsInterfaceMessage::MotorsInterfaceMessage(const MotorsInterfaceMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MotorsInterfaceMessage)
}

void MotorsInterfaceMessage::SharedCtor() {
  _cached_size_ = 0;
  motor1dc_ = 0;
  motor2dc_ = 0;
  motor3dc_ = 0;
  motor4dc_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MotorsInterfaceMessage::~MotorsInterfaceMessage() {
  // @@protoc_insertion_point(destructor:MotorsInterfaceMessage)
  SharedDtor();
}

void MotorsInterfaceMessage::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MotorsInterfaceMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MotorsInterfaceMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MotorsInterfaceMessage_descriptor_;
}

const MotorsInterfaceMessage& MotorsInterfaceMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_motorsinterface_2eproto();
  return *default_instance_;
}

MotorsInterfaceMessage* MotorsInterfaceMessage::default_instance_ = NULL;

MotorsInterfaceMessage* MotorsInterfaceMessage::New(::google::protobuf::Arena* arena) const {
  MotorsInterfaceMessage* n = new MotorsInterfaceMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MotorsInterfaceMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MotorsInterfaceMessage)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MotorsInterfaceMessage, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MotorsInterfaceMessage*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(motor1dc_, motor4dc_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool MotorsInterfaceMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MotorsInterfaceMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float motor1DC = 1;
      case 1: {
        if (tag == 13) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &motor1dc_)));
          set_has_motor1dc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_motor2Dc;
        break;
      }

      // required float motor2Dc = 2;
      case 2: {
        if (tag == 21) {
         parse_motor2Dc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &motor2dc_)));
          set_has_motor2dc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(29)) goto parse_motor3DC;
        break;
      }

      // required float motor3DC = 3;
      case 3: {
        if (tag == 29) {
         parse_motor3DC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &motor3dc_)));
          set_has_motor3dc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(37)) goto parse_motor4DC;
        break;
      }

      // required float motor4DC = 4;
      case 4: {
        if (tag == 37) {
         parse_motor4DC:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &motor4dc_)));
          set_has_motor4dc();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MotorsInterfaceMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MotorsInterfaceMessage)
  return false;
#undef DO_
}

void MotorsInterfaceMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MotorsInterfaceMessage)
  // required float motor1DC = 1;
  if (has_motor1dc()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->motor1dc(), output);
  }

  // required float motor2Dc = 2;
  if (has_motor2dc()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->motor2dc(), output);
  }

  // required float motor3DC = 3;
  if (has_motor3dc()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->motor3dc(), output);
  }

  // required float motor4DC = 4;
  if (has_motor4dc()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->motor4dc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MotorsInterfaceMessage)
}

::google::protobuf::uint8* MotorsInterfaceMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MotorsInterfaceMessage)
  // required float motor1DC = 1;
  if (has_motor1dc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->motor1dc(), target);
  }

  // required float motor2Dc = 2;
  if (has_motor2dc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->motor2dc(), target);
  }

  // required float motor3DC = 3;
  if (has_motor3dc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->motor3dc(), target);
  }

  // required float motor4DC = 4;
  if (has_motor4dc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->motor4dc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MotorsInterfaceMessage)
  return target;
}

int MotorsInterfaceMessage::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:MotorsInterfaceMessage)
  int total_size = 0;

  if (has_motor1dc()) {
    // required float motor1DC = 1;
    total_size += 1 + 4;
  }

  if (has_motor2dc()) {
    // required float motor2Dc = 2;
    total_size += 1 + 4;
  }

  if (has_motor3dc()) {
    // required float motor3DC = 3;
    total_size += 1 + 4;
  }

  if (has_motor4dc()) {
    // required float motor4DC = 4;
    total_size += 1 + 4;
  }

  return total_size;
}
int MotorsInterfaceMessage::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:MotorsInterfaceMessage)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required float motor1DC = 1;
    total_size += 1 + 4;

    // required float motor2Dc = 2;
    total_size += 1 + 4;

    // required float motor3DC = 3;
    total_size += 1 + 4;

    // required float motor4DC = 4;
    total_size += 1 + 4;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MotorsInterfaceMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MotorsInterfaceMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const MotorsInterfaceMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const MotorsInterfaceMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MotorsInterfaceMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MotorsInterfaceMessage)
    MergeFrom(*source);
  }
}

void MotorsInterfaceMessage::MergeFrom(const MotorsInterfaceMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MotorsInterfaceMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_motor1dc()) {
      set_motor1dc(from.motor1dc());
    }
    if (from.has_motor2dc()) {
      set_motor2dc(from.motor2dc());
    }
    if (from.has_motor3dc()) {
      set_motor3dc(from.motor3dc());
    }
    if (from.has_motor4dc()) {
      set_motor4dc(from.motor4dc());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void MotorsInterfaceMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MotorsInterfaceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MotorsInterfaceMessage::CopyFrom(const MotorsInterfaceMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MotorsInterfaceMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MotorsInterfaceMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void MotorsInterfaceMessage::Swap(MotorsInterfaceMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MotorsInterfaceMessage::InternalSwap(MotorsInterfaceMessage* other) {
  std::swap(motor1dc_, other->motor1dc_);
  std::swap(motor2dc_, other->motor2dc_);
  std::swap(motor3dc_, other->motor3dc_);
  std::swap(motor4dc_, other->motor4dc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MotorsInterfaceMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MotorsInterfaceMessage_descriptor_;
  metadata.reflection = MotorsInterfaceMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MotorsInterfaceMessage

// required float motor1DC = 1;
bool MotorsInterfaceMessage::has_motor1dc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MotorsInterfaceMessage::set_has_motor1dc() {
  _has_bits_[0] |= 0x00000001u;
}
void MotorsInterfaceMessage::clear_has_motor1dc() {
  _has_bits_[0] &= ~0x00000001u;
}
void MotorsInterfaceMessage::clear_motor1dc() {
  motor1dc_ = 0;
  clear_has_motor1dc();
}
 float MotorsInterfaceMessage::motor1dc() const {
  // @@protoc_insertion_point(field_get:MotorsInterfaceMessage.motor1DC)
  return motor1dc_;
}
 void MotorsInterfaceMessage::set_motor1dc(float value) {
  set_has_motor1dc();
  motor1dc_ = value;
  // @@protoc_insertion_point(field_set:MotorsInterfaceMessage.motor1DC)
}

// required float motor2Dc = 2;
bool MotorsInterfaceMessage::has_motor2dc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MotorsInterfaceMessage::set_has_motor2dc() {
  _has_bits_[0] |= 0x00000002u;
}
void MotorsInterfaceMessage::clear_has_motor2dc() {
  _has_bits_[0] &= ~0x00000002u;
}
void MotorsInterfaceMessage::clear_motor2dc() {
  motor2dc_ = 0;
  clear_has_motor2dc();
}
 float MotorsInterfaceMessage::motor2dc() const {
  // @@protoc_insertion_point(field_get:MotorsInterfaceMessage.motor2Dc)
  return motor2dc_;
}
 void MotorsInterfaceMessage::set_motor2dc(float value) {
  set_has_motor2dc();
  motor2dc_ = value;
  // @@protoc_insertion_point(field_set:MotorsInterfaceMessage.motor2Dc)
}

// required float motor3DC = 3;
bool MotorsInterfaceMessage::has_motor3dc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MotorsInterfaceMessage::set_has_motor3dc() {
  _has_bits_[0] |= 0x00000004u;
}
void MotorsInterfaceMessage::clear_has_motor3dc() {
  _has_bits_[0] &= ~0x00000004u;
}
void MotorsInterfaceMessage::clear_motor3dc() {
  motor3dc_ = 0;
  clear_has_motor3dc();
}
 float MotorsInterfaceMessage::motor3dc() const {
  // @@protoc_insertion_point(field_get:MotorsInterfaceMessage.motor3DC)
  return motor3dc_;
}
 void MotorsInterfaceMessage::set_motor3dc(float value) {
  set_has_motor3dc();
  motor3dc_ = value;
  // @@protoc_insertion_point(field_set:MotorsInterfaceMessage.motor3DC)
}

// required float motor4DC = 4;
bool MotorsInterfaceMessage::has_motor4dc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MotorsInterfaceMessage::set_has_motor4dc() {
  _has_bits_[0] |= 0x00000008u;
}
void MotorsInterfaceMessage::clear_has_motor4dc() {
  _has_bits_[0] &= ~0x00000008u;
}
void MotorsInterfaceMessage::clear_motor4dc() {
  motor4dc_ = 0;
  clear_has_motor4dc();
}
 float MotorsInterfaceMessage::motor4dc() const {
  // @@protoc_insertion_point(field_get:MotorsInterfaceMessage.motor4DC)
  return motor4dc_;
}
 void MotorsInterfaceMessage::set_motor4dc(float value) {
  set_has_motor4dc();
  motor4dc_ = value;
  // @@protoc_insertion_point(field_set:MotorsInterfaceMessage.motor4DC)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
