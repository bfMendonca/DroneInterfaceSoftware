// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JoystickReadings.proto

#ifndef PROTOBUF_JoystickReadings_2eproto__INCLUDED
#define PROTOBUF_JoystickReadings_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_JoystickReadings_2eproto();
void protobuf_AssignDesc_JoystickReadings_2eproto();
void protobuf_ShutdownFile_JoystickReadings_2eproto();

class JoystickReadings;

// ===================================================================

class JoystickReadings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:JoystickReadings) */ {
 public:
  JoystickReadings();
  virtual ~JoystickReadings();

  JoystickReadings(const JoystickReadings& from);

  inline JoystickReadings& operator=(const JoystickReadings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoystickReadings& default_instance();

  void Swap(JoystickReadings* other);

  // implements Message ----------------------------------------------

  inline JoystickReadings* New() const { return New(NULL); }

  JoystickReadings* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JoystickReadings& from);
  void MergeFrom(const JoystickReadings& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(JoystickReadings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required sint32 channel1Reading = 1;
  bool has_channel1reading() const;
  void clear_channel1reading();
  static const int kChannel1ReadingFieldNumber = 1;
  ::google::protobuf::int32 channel1reading() const;
  void set_channel1reading(::google::protobuf::int32 value);

  // required sint32 channel2Reading = 2;
  bool has_channel2reading() const;
  void clear_channel2reading();
  static const int kChannel2ReadingFieldNumber = 2;
  ::google::protobuf::int32 channel2reading() const;
  void set_channel2reading(::google::protobuf::int32 value);

  // required sint32 channel3Reading = 3;
  bool has_channel3reading() const;
  void clear_channel3reading();
  static const int kChannel3ReadingFieldNumber = 3;
  ::google::protobuf::int32 channel3reading() const;
  void set_channel3reading(::google::protobuf::int32 value);

  // required sint32 channel4Reading = 4;
  bool has_channel4reading() const;
  void clear_channel4reading();
  static const int kChannel4ReadingFieldNumber = 4;
  ::google::protobuf::int32 channel4reading() const;
  void set_channel4reading(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:JoystickReadings)
 private:
  inline void set_has_channel1reading();
  inline void clear_has_channel1reading();
  inline void set_has_channel2reading();
  inline void clear_has_channel2reading();
  inline void set_has_channel3reading();
  inline void clear_has_channel3reading();
  inline void set_has_channel4reading();
  inline void clear_has_channel4reading();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 channel1reading_;
  ::google::protobuf::int32 channel2reading_;
  ::google::protobuf::int32 channel3reading_;
  ::google::protobuf::int32 channel4reading_;
  friend void  protobuf_AddDesc_JoystickReadings_2eproto();
  friend void protobuf_AssignDesc_JoystickReadings_2eproto();
  friend void protobuf_ShutdownFile_JoystickReadings_2eproto();

  void InitAsDefaultInstance();
  static JoystickReadings* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// JoystickReadings

// required sint32 channel1Reading = 1;
inline bool JoystickReadings::has_channel1reading() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoystickReadings::set_has_channel1reading() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoystickReadings::clear_has_channel1reading() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoystickReadings::clear_channel1reading() {
  channel1reading_ = 0;
  clear_has_channel1reading();
}
inline ::google::protobuf::int32 JoystickReadings::channel1reading() const {
  // @@protoc_insertion_point(field_get:JoystickReadings.channel1Reading)
  return channel1reading_;
}
inline void JoystickReadings::set_channel1reading(::google::protobuf::int32 value) {
  set_has_channel1reading();
  channel1reading_ = value;
  // @@protoc_insertion_point(field_set:JoystickReadings.channel1Reading)
}

// required sint32 channel2Reading = 2;
inline bool JoystickReadings::has_channel2reading() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoystickReadings::set_has_channel2reading() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoystickReadings::clear_has_channel2reading() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoystickReadings::clear_channel2reading() {
  channel2reading_ = 0;
  clear_has_channel2reading();
}
inline ::google::protobuf::int32 JoystickReadings::channel2reading() const {
  // @@protoc_insertion_point(field_get:JoystickReadings.channel2Reading)
  return channel2reading_;
}
inline void JoystickReadings::set_channel2reading(::google::protobuf::int32 value) {
  set_has_channel2reading();
  channel2reading_ = value;
  // @@protoc_insertion_point(field_set:JoystickReadings.channel2Reading)
}

// required sint32 channel3Reading = 3;
inline bool JoystickReadings::has_channel3reading() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void JoystickReadings::set_has_channel3reading() {
  _has_bits_[0] |= 0x00000004u;
}
inline void JoystickReadings::clear_has_channel3reading() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void JoystickReadings::clear_channel3reading() {
  channel3reading_ = 0;
  clear_has_channel3reading();
}
inline ::google::protobuf::int32 JoystickReadings::channel3reading() const {
  // @@protoc_insertion_point(field_get:JoystickReadings.channel3Reading)
  return channel3reading_;
}
inline void JoystickReadings::set_channel3reading(::google::protobuf::int32 value) {
  set_has_channel3reading();
  channel3reading_ = value;
  // @@protoc_insertion_point(field_set:JoystickReadings.channel3Reading)
}

// required sint32 channel4Reading = 4;
inline bool JoystickReadings::has_channel4reading() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void JoystickReadings::set_has_channel4reading() {
  _has_bits_[0] |= 0x00000008u;
}
inline void JoystickReadings::clear_has_channel4reading() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void JoystickReadings::clear_channel4reading() {
  channel4reading_ = 0;
  clear_has_channel4reading();
}
inline ::google::protobuf::int32 JoystickReadings::channel4reading() const {
  // @@protoc_insertion_point(field_get:JoystickReadings.channel4Reading)
  return channel4reading_;
}
inline void JoystickReadings::set_channel4reading(::google::protobuf::int32 value) {
  set_has_channel4reading();
  channel4reading_ = value;
  // @@protoc_insertion_point(field_set:JoystickReadings.channel4Reading)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_JoystickReadings_2eproto__INCLUDED
